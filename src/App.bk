import React, {Component , useContext} from 'react';
import './App.css';
import { BrowserRouter, Switch, Route } from 'react-router-dom';
import NotFound from './containers/NotFound/NotFound'
import Home from './containers/Home/Home';
import Orders from './containers/Orders/Orders';
import Layout from './components/Layout';
import  LoginForm  from './containers/Login/LoginForm';
import  SignUp  from './containers/Login/SignUp';
import { Account, AccountContext } from './components/Accounts';
import UserPool from './components/UserPool';
import { loginRequest } from "./actions";
import { connect } from 'react-redux';
import ReactComponent from './components/ReactComponent';
import {CognitoState} from 'react-cognito';
import CognitoLogin from './components/CognitoLogin';
import Dashboard from './containers/Dashboard';

class App extends Component {

    constructor(props) {
        super(props);
        this.state = {
            cognito: null,
        }
    }

  

  handleClick(id) {
    // console.log(selectedTab);
    //this.props.history.push(`/checkout/${id}`);
    // console.log(this.props);
  }

  componentDidMount() {
    this.setState({
      cognito: this.props.cognito
    });
    console.log("LOGGERD USER DATA", (this.cognito)?this.cognito.state:'');
   
  }

  registerForm = () => (
    <div>
      <p>Complete this form</p>
      <SignUp />
      <Link to="/">Home</Link>
    </div>
);


    render(){
    return (
      
     <BrowserRouter>
      
            {
                this.cognito && this.cognito.state==CognitoState.LOGGED_IN ? (
                    
                    <Switch>
                        <Route exact path='/' component={Dashboard} />
                       {/*  <Route exact path='/login' component={CognitoLogin} /> */}
                        <Route exact path='/orders' component={Orders} />
                        <Route exact path="*"  component={NotFound} />
                    </Switch>
                ):(
                    <Switch>
                        <Route exact path='/' component={Dashboard} />
                        <Route exact path='/register' component={this.registerForm} />
                        <Route exact path='*' component={CognitoLogin} />
                    </Switch>
                )
            }

    </BrowserRouter> 
    
    );
  }
}


const mapStateToProps = (reducer) => {
  return reducer;
};

const mapDispatchToProps = {
  loginRequest
};

export default connect(mapStateToProps, mapDispatchToProps)(App);

